name: Create Confluence Release Notes
on:
  workflow_run:
    workflows: ["Create Release"]
    types:
      - completed

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Read and export JSON config values directly as environment variables
      - name: Load config from JSON
        id: load_config
        run: |
          # Extract and export the required Confluence settings directly
          export confluenceBaseUrl=$(jq -r '.confluenceSettings.confluenceBaseUrl' config.json)
          export confluenceParentId=$(jq -r '.confluenceSettings.confluenceParentId' config.json)
          export atlassianUserName=$(jq -r '.confluenceSettings.atlassianUserName' config.json)
          export folderToPublish=$(jq -r '.confluenceSettings.folderToPublish' config.json)

        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Fetch release notes
      - name: Fetch release notes
        id: fetch_release_notes
        run: |
          # Fetch the latest tag
          latest_tag=$(gh release list --limit 1 --json tagName -q '.[0].tagName')

          # Fetch the release notes
          release_notes=$(gh release view $latest_tag --json body --jq '.body')

          # Create a 'docs' folder if it doesn't exist
          mkdir -p docs
          
          # Save the release notes with the version number in the file name
          echo "${release_notes}" > "docs/Release v${latest_tag}.md"

      # Step 4: Ensure correct permissions for the docs folder and files
      - name: Set permissions for docs folder
        run: chmod -R 755 docs

      # Step 5: Publish Markdown to Confluence using exported environment variables
      - name: Publish Markdown to Confluence
        uses: markdown-confluence/publish-action@v5
        with:
          confluenceBaseUrl: ${{ env.confluenceBaseUrl }}
          confluenceParentId: ${{ env.confluenceParentId }}
          atlassianUserName: ${{ env.atlassianUserName }}
          atlassianApiToken: ${{ secrets.ATLASSIAN_API_TOKEN }}
          folderToPublish: ${{ env.folderToPublish }}
